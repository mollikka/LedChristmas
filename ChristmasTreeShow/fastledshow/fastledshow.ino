#include <FastLED.h>
#define NUM_LEDS 150
#define DATA_PIN 13

CRGB leds[NUM_LEDS];

static int XCOORD[150] = {
96.83098591549296,
88.02816901408451,
80.28169014084507,
72.1830985915493,
62.323943661971825,
48.59154929577465,
37.32394366197183,
22.183098591549296,
15.492957746478872,
11.267605633802818,
8.450704225352112,
4.929577464788732,
0.35211267605633806,
3.5211267605633805,
1.056338028169014,
12.676056338028168,
0.7042253521126761,
1.7605633802816902,
7.394366197183098,
10.211267605633804,
11.971830985915492,
10.56338028169014,
13.380281690140844,
17.253521126760564,
17.6056338028169,
17.95774647887324,
32.3943661971831,
36.971830985915496,
54.22535211267606,
57.3943661971831,
55.28169014084507,
73.94366197183099,
75.35211267605634,
80.63380281690141,
84.15492957746478,
89.08450704225352,
98.94366197183099,
100.0,
97.88732394366197,
97.53521126760563,
98.94366197183099,
98.23943661971832,
98.23943661971832,
96.83098591549296,
94.71830985915493,
99.29577464788733,
94.36619718309859,
92.6056338028169,
91.19718309859155,
85.91549295774648,
80.63380281690141,
68.30985915492957,
57.04225352112676,
46.83098591549296,
50.0,
35.563380281690144,
26.408450704225352,
33.80281690140845,
16.901408450704224,
15.140845070422534,
11.619718309859154,
1.4084507042253522,
0.0,
7.394366197183098,
5.28169014084507,
13.732394366197184,
13.028169014084506,
17.6056338028169,
24.647887323943664,
25.704225352112676,
30.28169014084507,
35.91549295774648,
39.08450704225352,
49.647887323943664,
55.28169014084507,
62.676056338028175,
65.84507042253522,
70.4225352112676,
82.04225352112677,
94.01408450704226,
90.84507042253522,
89.43661971830986,
83.80281690140845,
81.33802816901408,
84.50704225352112,
83.80281690140845,
75.35211267605634,
67.25352112676056,
58.45070422535211,
51.76056338028169,
42.25352112676056,
35.563380281690144,
27.11267605633803,
24.295774647887324,
19.366197183098592,
19.718309859154928,
19.366197183098592,
22.887323943661972,
28.87323943661972,
36.61971830985916,
52.816901408450704,
59.859154929577464,
65.84507042253522,
69.71830985915493,
79.5774647887324,
80.28169014084507,
78.87323943661971,
76.40845070422534,
78.52112676056338,
74.29577464788733,
68.30985915492957,
60.56338028169014,
52.46478873239436,
41.19718309859155,
35.563380281690144,
31.338028169014088,
21.47887323943662,
20.070422535211268,
25.704225352112676,
21.830985915492956,
27.464788732394368,
30.985915492957744,
33.45070422535211,
38.38028169014084,
45.42253521126761,
55.28169014084507,
52.816901408450704,
64.7887323943662,
60.56338028169014,
72.88732394366197,
67.6056338028169,
56.33802816901409,
57.3943661971831,
63.02816901408451,
67.25352112676056,
69.01408450704226,
65.14084507042254,
64.43661971830986,
52.46478873239436,
44.71830985915493,
40.49295774647887,
41.54929577464789,
40.845070422535215,
46.83098591549296,
42.95774647887324,
44.36619718309859,
49.29577464788733,
52.112676056338024,
52.112676056338024,
54.5774647887324,
};

static int YCOORD[150] = {
78.91737891737893,
83.76068376068376,
85.47008547008546,
92.02279202279202,
96.86609686609687,
94.01709401709401,
100.0,
94.01709401709401,
92.02279202279202,
88.31908831908832,
82.05128205128204,
70.37037037037037,
69.51566951566952,
60.96866096866097,
55.27065527065527,
47.57834757834758,
41.5954415954416,
31.908831908831907,
25.356125356125357,
15.669515669515668,
17.94871794871795,
4.843304843304843,
4.843304843304843,
1.7094017094017095,
0.0,
2.564102564102564,
3.418803418803419,
4.273504273504273,
9.686609686609685,
13.675213675213676,
0.8547008547008548,
2.849002849002849,
14.245014245014245,
9.116809116809117,
26.780626780626783,
25.925925925925924,
24.216524216524217,
14.814814814814813,
35.32763532763533,
35.61253561253561,
36.75213675213676,
48.148148148148145,
52.13675213675214,
49.85754985754986,
54.700854700854705,
57.54985754985755,
56.98005698005698,
60.3988603988604,
60.68376068376068,
67.23646723646723,
76.35327635327636,
85.47008547008546,
82.05128205128204,
82.62108262108262,
73.50427350427351,
75.21367521367522,
70.65527065527066,
58.97435897435898,
63.53276353276354,
53.84615384615385,
43.01994301994302,
56.98005698005698,
47.293447293447294,
47.008547008547005,
35.04273504273504,
31.339031339031337,
20.22792022792023,
20.22792022792023,
17.37891737891738,
10.256410256410255,
11.11111111111111,
9.401709401709402,
1.9943019943019942,
8.262108262108262,
10.256410256410255,
9.686609686609685,
13.105413105413104,
18.233618233618234,
21.367521367521366,
18.803418803418804,
29.914529914529915,
31.908831908831907,
32.47863247863248,
40.74074074074074,
49.002849002849004,
50.427350427350426,
55.84045584045584,
57.54985754985755,
56.69515669515669,
57.26495726495726,
60.68376068376068,
57.54985754985755,
53.561253561253565,
44.729344729344724,
39.03133903133903,
31.62393162393162,
27.635327635327634,
19.08831908831909,
15.954415954415953,
12.82051282051282,
14.245014245014245,
20.7977207977208,
16.23931623931624,
27.92022792022792,
28.774928774928775,
33.61823361823362,
40.17094017094017,
43.58974358974359,
44.15954415954416,
49.572649572649574,
54.98575498575499,
53.27635327635327,
51.566951566951566,
49.85754985754986,
44.44444444444444,
43.87464387464387,
41.88034188034188,
33.903133903133906,
29.629629629629626,
18.233618233618234,
12.82051282051282,
9.401709401709402,
5.128205128205128,
5.698005698005698,
8.547008547008547,
10.826210826210826,
18.233618233618234,
17.94871794871795,
22.79202279202279,
25.64102564102564,
35.32763532763533,
24.501424501424502,
28.49002849002849,
38.74643874643874,
39.88603988603989,
44.15954415954416,
46.15384615384615,
44.729344729344724,
41.5954415954416,
37.89173789173789,
41.88034188034188,
35.8974358974359,
32.763532763532766,
30.484330484330485,
28.49002849002849,
31.908831908831907,
30.76923076923077,
31.62393162393162,
31.62393162393162,
29.629629629629626,
};

static int ZCOORD[150] = {
88.3295452691791,
88.08526950535858,
90.07006106214419,
92.62401378927851,
93.36907525922865,
94.02618657937808,
91.63467655550782,
91.79589584092305,
91.21817074563239,
90.63555197894634,
86.92247880768414,
88.88524884319045,
88.64341991506761,
88.97075215729348,
90.04192245162062,
92.41875146130465,
95.9632648400585,
96.44447586060649,
97.75747508305648,
97.2787108982062,
91.18391504586458,
87.96428707363889,
87.97896808782508,
86.99941819684521,
86.49618565501792,
87.98019150567393,
86.65985177613085,
86.16762999494321,
85.49950791415414,
83.11656181522584,
83.29246211482729,
81.30277688664626,
78.41048115664643,
72.81035392119014,
70.82556236440452,
77.09748193419642,
78.7427070702677,
80.1583374567046,
85.59724540674566,
87.48185263524203,
87.65652951699462,
92.6044391036969,
93.03684934560738,
86.6512878511889,
85.75846469216089,
83.37429517538374,
81.47745376839885,
79.33144292619801,
78.68044869529282,
83.7114147604004,
77.93294038964498,
77.93294038964498,
78.75861150230274,
75.78937638314184,
72.40730570765207,
70.26496511899778,
68.12262453034347,
68.53056641527695,
68.36812371201287,
69.2731810495294,
68.03956805193816,
68.86401574674707,
69.85335298051776,
65.07033293277726,
66.47250572287683,
65.89111037403961,
63.75366345678073,
66.79739112940499,
68.10672009830841,
73.05585310285953,
74.54352920706211,
77.35521529435434,
76.51241633181266,
78.17232248207011,
77.92804671824959,
72.64057071083295,
74.37496941455379,
72.15324260104072,
75.94080832576627,
71.90040291227822,
73.31236304516858,
68.11283718755269,
66.21599578056777,
62.67025898396507,
62.168249859986624,
58.37579046386567,
59.36268086193866,
57.87500475773608,
55.49817574805204,
50.55148957919863,
53.02483266362533,
54.76412503874157,
56.41057359266167,
55.995291200635094,
54.518625857072166,
52.128339251050775,
47.76060159533688,
48.33832669062753,
48.91482836806934,
46.43903844794493,
50.3902702937834,
53.186051949040575,
52.18692737247908,
48.65220133651603,
47.408800996134,
45.188297600469795,
44.187949606059455,
42.53049029149969,
39.88369374316925,
34.28968359695722,
37.09158234145864,
40.233047506674424,
40.72649270571091,
40.489557448983476,
38.01988461810332,
36.38199998912518,
33.001152731484254,
34.07599327935795,
33.33337864510551,
33.832940933386254,
34.07599327935795,
33.170935941841435,
28.886254764532843,
33.74621420143439,
33.716852173061966,
39.18267531577774,
38.760052416658056,
40.490780866832324,
38.255596456981905,
34.464360478709814,
31.33268265628483,
31.34002316337794,
26.874548015072506,
30.41906139382636,
31.408398627597045,
33.387073095138405,
30.825779860910984,
25.05464599724867,
26.301716591177254,
22.102538727971684,
18.146413210737805,
15.836736247424025,
12.37650276492434,
10.228045087025789,
5.77847437075542,
2.80679241589682,
0.0,
0.6571113201494201,
3.044951090473109,
8.491199547607266,
};

void setup() {
  // put your setup code here, to run once:
  FastLED.addLeds<WS2811, DATA_PIN>(leds, NUM_LEDS);
  randomSeed(46);
}

//CALM EFFECTS

void natural(int led, unsigned long time) {
  if (random(100000)>99995) {
    leds[led] = CHSV( 255,
                      0,
                      255);
  } else {
    leds[led] = CHSV(  25-random(10),
                       200+random(55),
                       128);
  }
}

void rainbow(int led, unsigned long time) {
  leds[led] = CHSV( (time/200 + 255*(led/(2*float(NUM_LEDS)))), 255, 128);
}

void radar(int led, unsigned long time) {
  int centerx = 50+50*sin(float(time)/1000.0);
  int centery = 50+50*cos(float(time)/1000.0);
  int centerz = 50;
  float dist = sqrt(sq(XCOORD[led]-centerx) + sq(YCOORD[led]-centery) + sq(ZCOORD[led]-centerz));
  
  int v = 60 + 30*sin((time/10 + dist*5)/100);
  leds[led] = CHSV(0,2*v,v);
}

void rainbow_horizontal(int led, unsigned long time) {
  int centerx = 50;
  int centery = 50;
  int centerz = 50;

  leds[led] = CHSV( (time/80 + XCOORD[led]*2)%255, 255, 128);

}

void coolball(int led, unsigned long time) {
  
  const int centerx = 50;
  const int centery = 50;
  const int centerz = 70;

  int x = XCOORD[led];
  int y = YCOORD[led];
  int z = ZCOORD[led];


  float ballx = sin(float(time)/4000)*50 + centerx;
  float bally = cos(float(time)/3000)*50 + centery;
  float ballz = sin(float(time)/1760)*50 + centerz;

  float distancesq = pow(ballx-x, 2) + pow(bally-y, 2) + pow(ballz-z, 2);

  leds[led] = CHSV(30-max(10,30-0.1*distancesq)+random(5),200+random(10),max(50,200-0.05*distancesq));

}

//CRAZY EFFECTS

void coolball_presentation(int led, unsigned long time) {
  
  const int centerx = 50;
  const int centery = 50;
  const int centerz = 70;

  int x = XCOORD[led];
  int y = YCOORD[led];
  int z = ZCOORD[led];


  float ballx = sin(float(time)/1000)*50 + centerx;
  float bally = cos(float(time)/600)*50 + centery;
  float ballz = sin(float(time)/760)*50 + centerz;

  float distancesq = pow(ballx-x, 2) + pow(bally-y, 2) + pow(ballz-z, 2);

  leds[led] = CHSV(max(0,200-0.2*distancesq),200,max(0,200-0.05*distancesq));

}


void sweep_presentation(int led, unsigned long time) {

  int v = 128+128*sin(float(time)/400+float(XCOORD[led]+ZCOORD[led])/20);
  leds[led] = CHSV(v,v,v);
}
void sweep2_presentation(int led, unsigned long time) {

  int v = 128+128*sin(float(time)/400+float(XCOORD[led])/20);
  int w = 128+128*sin(float(time)/400+float(YCOORD[led])/20);
  int u = 128+128*sin(float(time)/400+float(ZCOORD[led])/20);
  leds[led] = CRGB(v,w,u);
}

void rainbow_presentation(int led, unsigned long time) {
  leds[led] = CHSV( (time/20 + 255*(2*led/(float(NUM_LEDS)))), 255, 128);
}

void energy_collapse(int led, unsigned long time) {
  int centerx = 30;
  int centery = 50;
  int centerz = 70;
  float dist = sqrt(sq(XCOORD[led]-centerx) + sq(YCOORD[led]-centery) + sq(ZCOORD[led]-centerz));
  
  int v = pow(sin(dist/10+float(time)/400),2)*200;
  leds[led] = CHSV(dist*dist/100,220,v);
}


void center_pulse(int led, unsigned long time) {
  int centerx = 50;
  int centery = 50;
  int centerz = 70;
  float dist = sqrt(sq(XCOORD[led]-centerx) + sq(YCOORD[led]-centery) + sq(ZCOORD[led]-centerz));
  
  if (dist < sin(float(time)/500)*60)
    leds[led] = CHSV(0,0,100);
  else
    leds[led] = CHSV(0,0,0);
  
}

//HELPERS

void run_effect(void (*effect)(int led, unsigned long time),int first_led,int led_count,unsigned long duration_millis) {
  unsigned long start = millis();
  unsigned long now = millis();
  while ((now - start) < duration_millis) {
    now = millis();
    for (int i=first_led; i<led_count; i++) {
      effect(i, now);
    }
    FastLED.show();
  }
}

void effect_transition_scroll(void (*effect1)(int led, unsigned long time), void (*effect2)(int led, unsigned long time), unsigned long duration_millis) {
  unsigned long start = millis();
  unsigned long now = millis();
  while ((now - start) < duration_millis) {
    now = millis();
    int transition_spot = NUM_LEDS*(now - start)/duration_millis;
    for (int i=0; i<transition_spot; i++) {
      effect2(i, now);
    }
    for (int i=transition_spot; i<NUM_LEDS; i++) {
      effect1(i, now);
    }
    FastLED.show();
  }
}

void loop() {
    run_effect(rainbow_horizontal, 0, NUM_LEDS, 7000);
    //effect_transition_scroll(coolball_presentation, sweep_presentation, 1000);
    //run_effect(sweep_presentation, 0, NUM_LEDS, 7000);
    //effect_transition_scroll(sweep_presentation, sweep2_presentation, 1000);
    //run_effect(sweep2_presentation, 0, NUM_LEDS, 7000);
    //effect_transition_scroll(sweep2_presentation, rainbow_presentation, 1000);
    //run_effect(rainbow_presentation, 0, NUM_LEDS, 7000);
    //effect_transition_scroll(rainbow_presentation, energy_collapse, 1000);
    //run_effect(energy_collapse, 0, NUM_LEDS, 7000);
    //effect_transition_scroll(energy_collapse, coolball_presentation, 1000);
}
