#include <FastLED.h>
#define NUM_LEDS 150
#define DATA_PIN 13

CRGB leds[NUM_LEDS];

static int XCOORD[ 150 ] = {
0.0,
12.903225806451612,
11.29032258064516,
16.7741935483871,
17.096774193548388,
20.64516129032258,
27.741935483870968,
31.61290322580645,
37.41935483870968,
46.45161290322581,
46.12903225806452,
53.2258064516129,
62.25806451612903,
64.51612903225806,
70.0,
74.51612903225806,
78.06451612903226,
82.9032258064516,
90.0,
90.0,
95.16129032258065,
98.70967741935483,
100.0,
97.74193548387096,
93.54838709677419,
89.03225806451613,
84.51612903225806,
72.58064516129032,
73.54838709677419,
66.45161290322581,
61.935483870967744,
60.64516129032258,
56.12903225806451,
48.70967741935484,
45.483870967741936,
44.516129032258064,
41.612903225806456,
36.45161290322581,
29.03225806451613,
31.61290322580645,
25.483870967741932,
21.935483870967744,
17.419354838709676,
14.838709677419354,
13.870967741935484,
20.32258064516129,
23.225806451612904,
27.741935483870968,
30.64516129032258,
34.83870967741935,
49.354838709677416,
62.25806451612903,
66.12903225806451,
75.16129032258064,
80.64516129032258,
88.38709677419355,
94.83870967741936,
90.96774193548387,
93.2258064516129,
84.51612903225806,
91.29032258064517,
84.19354838709677,
85.16129032258064,
75.80645161290323,
71.93548387096774,
69.35483870967742,
62.903225806451616,
58.70967741935483,
47.74193548387097,
49.67741935483871,
41.29032258064516,
45.806451612903224,
36.774193548387096,
35.80645161290323,
32.58064516129032,
27.741935483870968,
21.29032258064516,
22.58064516129032,
22.58064516129032,
30.967741935483872,
36.12903225806451,
43.87096774193549,
49.67741935483871,
58.06451612903226,
65.16129032258064,
63.54838709677419,
73.54838709677419,
71.29032258064515,
78.70967741935485,
83.22580645161291,
83.54838709677419,
81.29032258064515,
75.80645161290323,
68.70967741935485,
65.80645161290323,
62.903225806451616,
58.70967741935483,
45.16129032258064,
49.03225806451613,
41.935483870967744,
32.58064516129032,
27.741935483870968,
30.64516129032258,
36.12903225806451,
39.67741935483871,
37.74193548387097,
40.32258064516129,
45.806451612903224,
52.58064516129032,
56.451612903225815,
67.41935483870968,
74.19354838709677,
76.12903225806451,
80.0,
82.58064516129032,
78.70967741935485,
76.77419354838709,
69.35483870967742,
62.25806451612903,
60.0,
59.67741935483871,
52.58064516129032,
47.096774193548384,
39.35483870967742,
34.193548387096776,
34.83870967741935,
32.58064516129032,
35.80645161290323,
34.83870967741935,
42.90322580645161,
48.38709677419355,
55.80645161290323,
64.51612903225806,
68.38709677419355,
69.6774193548387,
71.29032258064515,
70.0,
61.935483870967744,
57.41935483870968,
53.5483870967742,
51.61290322580645,
51.61290322580645,
49.354838709677416,
50.967741935483865,
51.935483870967744,
50.0,
48.064516129032256,
49.67741935483871,
53.87096774193548,
50.967741935483865,
};

static int YCOORD[ 150 ] = {
19.314641744548286,
21.18380062305296,
33.95638629283489,
29.595015576323984,
24.299065420560748,
20.5607476635514,
19.003115264797508,
5.607476635514018,
4.984423676012461,
0.0,
9.968847352024921,
10.2803738317757,
13.084112149532709,
9.345794392523365,
10.903426791277258,
14.330218068535824,
20.87227414330218,
35.202492211838006,
29.283489096573206,
43.613707165109034,
46.41744548286604,
63.55140186915887,
71.02803738317756,
84.11214953271028,
89.7196261682243,
92.21183800623052,
97.19626168224299,
83.8006230529595,
95.95015576323988,
90.34267912772586,
89.40809968847351,
93.76947040498442,
100.0,
95.32710280373831,
93.76947040498442,
91.58878504672897,
78.50467289719626,
80.37383177570094,
77.25856697819314,
73.83177570093457,
84.42367601246106,
92.5233644859813,
45.17133956386293,
38.62928348909657,
35.82554517133956,
34.26791277258567,
24.922118380062305,
23.98753894080997,
18.38006230529595,
11.838006230529595,
10.903426791277258,
9.034267912772584,
14.953271028037381,
13.395638629283487,
25.85669781931464,
26.479750778816197,
38.006230529595015,
41.43302180685358,
52.95950155763239,
64.48598130841121,
77.25856697819314,
80.06230529595015,
88.1619937694704,
86.29283489096574,
89.40809968847351,
95.95015576323988,
95.6386292834891,
91.27725856697819,
91.90031152647975,
77.25856697819314,
70.09345794392523,
68.84735202492212,
68.53582554517133,
67.91277258566979,
48.598130841121495,
47.66355140186916,
44.23676012461059,
33.95638629283489,
27.102803738317753,
27.725856697819314,
25.85669781931464,
16.822429906542055,
21.18380062305296,
17.75700934579439,
17.445482866043612,
26.791277258566975,
30.529595015576323,
45.17133956386293,
52.95950155763239,
57.3208722741433,
67.601246105919,
77.25856697819314,
85.35825545171339,
76.01246105919003,
88.47352024922118,
91.27725856697819,
88.47352024922118,
89.40809968847351,
70.09345794392523,
71.65109034267913,
61.99376947040498,
57.3208722741433,
60.747663551401864,
47.97507788161994,
40.18691588785047,
34.890965732087224,
30.529595015576323,
24.610591900311526,
27.725856697819314,
26.168224299065418,
22.118380062305295,
32.087227414330215,
36.13707165109034,
51.71339563862928,
59.50155763239875,
64.17445482866043,
69.47040498442367,
80.37383177570094,
72.58566978193146,
81.30841121495327,
76.63551401869158,
69.47040498442367,
64.797507788162,
70.09345794392523,
63.55140186915887,
52.336448598130836,
49.532710280373834,
40.49844236760124,
36.13707165109034,
36.13707165109034,
38.006230529595015,
33.64485981308411,
36.7601246105919,
47.0404984423676,
47.97507788161994,
60.43613707165109,
64.48598130841121,
65.10903426791276,
57.943925233644855,
55.7632398753894,
51.71339563862928,
48.90965732087228,
41.74454828660436,
42.99065420560748,
47.97507788161994,
46.728971962616825,
47.0404984423676,
48.598130841121495,
54.82866043613706,
52.64797507788161,
};

static int ZCOORD[ 150 ] = {
84.97942386831275,
89.09465020576131,
85.18518518518519,
87.86008230452676,
90.3292181069959,
92.18106995884774,
93.62139917695474,
97.53086419753086,
100.0,
97.53086419753086,
92.18106995884774,
91.9753086419753,
90.53497942386831,
90.53497942386831,
95.88477366255144,
88.06584362139918,
92.5925925925926,
92.38683127572016,
91.56378600823045,
87.86008230452676,
88.06584362139918,
86.62551440329219,
84.97942386831275,
86.62551440329219,
81.89300411522635,
83.33333333333334,
84.77366255144034,
87.03703703703704,
87.65432098765432,
86.0082304526749,
84.15637860082305,
84.15637860082305,
86.62551440329219,
82.92181069958848,
75.7201646090535,
82.92181069958848,
81.89300411522635,
81.27572016460906,
80.04115226337449,
73.04526748971193,
76.95473251028807,
78.18930041152264,
76.13168724279835,
73.4567901234568,
73.4567901234568,
70.37037037037037,
71.39917695473251,
67.90123456790124,
66.0493827160494,
66.46090534979425,
70.57613168724279,
72.0164609053498,
74.8971193415638,
71.39917695473251,
72.8395061728395,
69.75308641975309,
70.98765432098766,
71.81069958847736,
68.51851851851852,
67.48971193415639,
68.10699588477365,
65.4320987654321,
72.63374485596708,
74.8971193415638,
74.69135802469135,
74.48559670781893,
71.81069958847736,
69.95884773662551,
66.8724279835391,
66.2551440329218,
65.84362139917695,
60.288065843621396,
63.991769547325106,
57.61316872427984,
55.144032921810705,
53.49794238683128,
50.617283950617285,
51.85185185185185,
53.90946502057613,
56.99588477366255,
57.818930041152264,
57.818930041152264,
60.08230452674898,
58.64197530864198,
56.37860082304527,
58.64197530864198,
58.43621399176955,
58.230452674897116,
60.49382716049383,
55.76131687242798,
57.20164609053497,
59.25925925925925,
57.20164609053497,
58.8477366255144,
61.31687242798354,
61.934156378600825,
62.34567901234568,
56.79012345679012,
60.90534979423868,
61.111111111111114,
54.73251028806584,
54.32098765432099,
49.794238683127574,
48.559670781893004,
47.53086419753087,
44.23868312757202,
43.20987654320987,
42.181069958847736,
42.181069958847736,
42.38683127572017,
43.20987654320987,
46.09053497942387,
45.06172839506173,
48.76543209876543,
47.325102880658434,
48.148148148148145,
50.20576131687243,
47.53086419753087,
42.79835390946502,
46.70781893004115,
52.05761316872428,
49.58847736625515,
49.794238683127574,
42.79835390946502,
37.65432098765432,
36.831275720164605,
33.53909465020576,
35.18518518518518,
30.45267489711934,
36.0082304526749,
37.242798353909464,
35.390946502057616,
31.68724279835391,
34.15637860082305,
33.53909465020576,
34.36213991769547,
34.77366255144033,
35.80246913580247,
31.069958847736622,
30.45267489711934,
22.016460905349795,
18.72427983539095,
12.757201646090536,
10.493827160493826,
15.432098765432098,
7.613168724279835,
3.292181069958848,
0.0,
0.6172839506172839,
0.205761316872428,
};

void setup() {
  // put your setup code here, to run once:
  FastLED.addLeds<WS2811, DATA_PIN>(leds, NUM_LEDS);
  randomSeed(46);
}

//CALM EFFECTS

void natural(int led, unsigned long time) {
  if (random(100000)>99995) {
    leds[led] = CHSV( 255,
                      0,
                      255);
  } else {
    leds[led] = CHSV(  25-random(10),
                       200+random(55),
                       128);
  }
}

void rainbow(int led, unsigned long time) {
  leds[led] = CHSV( (time/200 + 255*(led/(2*float(NUM_LEDS)))), 255, 128);
}

void radar(int led, unsigned long time) {
  int centerx = 50+50*sin(float(time)/1000.0);
  int centery = 50+50*cos(float(time)/1000.0);
  int centerz = 50;
  float dist = sqrt(sq(XCOORD[led]-centerx) + sq(YCOORD[led]-centery) + sq(ZCOORD[led]-centerz));
  
  int v = 60 + 30*sin((time/10 + dist*5)/100);
  leds[led] = CHSV(0,2*v,v);
}

void coolball(int led, unsigned long time) {
  
  const int centerx = 50;
  const int centery = 50;
  const int centerz = 70;

  int x = XCOORD[led];
  int y = YCOORD[led];
  int z = ZCOORD[led];


  float ballx = sin(float(time)/4000)*50 + centerx;
  float bally = cos(float(time)/3000)*50 + centery;
  float ballz = sin(float(time)/1760)*50 + centerz;

  float distancesq = pow(ballx-x, 2) + pow(bally-y, 2) + pow(ballz-z, 2);

  leds[led] = CHSV(30-max(10,30-0.1*distancesq)+random(5),200+random(10),max(50,200-0.05*distancesq));

}

//CRAZY EFFECTS

void coolball_presentation(int led, unsigned long time) {
  
  const int centerx = 50;
  const int centery = 50;
  const int centerz = 70;

  int x = XCOORD[led];
  int y = YCOORD[led];
  int z = ZCOORD[led];


  float ballx = sin(float(time)/1000)*50 + centerx;
  float bally = cos(float(time)/600)*50 + centery;
  float ballz = sin(float(time)/760)*50 + centerz;

  float distancesq = pow(ballx-x, 2) + pow(bally-y, 2) + pow(ballz-z, 2);

  leds[led] = CHSV(max(0,200-0.2*distancesq),200,max(0,200-0.05*distancesq));

}


void sweep_presentation(int led, unsigned long time) {

  int v = 128+128*sin(float(time)/400+float(XCOORD[led]+ZCOORD[led])/20);
  leds[led] = CHSV(v,v,v);
}
void sweep2_presentation(int led, unsigned long time) {

  int v = 128+128*sin(float(time)/400+float(XCOORD[led])/20);
  int w = 128+128*sin(float(time)/400+float(YCOORD[led])/20);
  int u = 128+128*sin(float(time)/400+float(ZCOORD[led])/20);
  leds[led] = CRGB(v,w,u);
}

void rainbow_presentation(int led, unsigned long time) {
  leds[led] = CHSV( (time/20 + 255*(2*led/(float(NUM_LEDS)))), 255, 128);
}

void energy_collapse(int led, unsigned long time) {
  int centerx = 30;
  int centery = 50;
  int centerz = 70;
  float dist = sqrt(sq(XCOORD[led]-centerx) + sq(YCOORD[led]-centery) + sq(ZCOORD[led]-centerz));
  
  int v = pow(sin(dist/10+float(time)/400),2)*200;
  leds[led] = CHSV(dist*dist/100,220,v);
}


void center_pulse(int led, unsigned long time) {
  int centerx = 50;
  int centery = 50;
  int centerz = 70;
  float dist = sqrt(sq(XCOORD[led]-centerx) + sq(YCOORD[led]-centery) + sq(ZCOORD[led]-centerz));
  
  if (dist < sin(float(time)/500)*60)
    leds[led] = CHSV(0,0,100);
  else
    leds[led] = CHSV(0,0,0);
  
}

//HELPERS

void run_effect(void (*effect)(int led, unsigned long time),int first_led,int led_count,unsigned long duration_millis) {
  unsigned long start = millis();
  unsigned long now = millis();
  while ((now - start) < duration_millis) {
    now = millis();
    for (int i=first_led; i<led_count; i++) {
      effect(i, now);
    }
    FastLED.show();
  }
}

void effect_transition_scroll(void (*effect1)(int led, unsigned long time), void (*effect2)(int led, unsigned long time), unsigned long duration_millis) {
  unsigned long start = millis();
  unsigned long now = millis();
  while ((now - start) < duration_millis) {
    now = millis();
    int transition_spot = NUM_LEDS*(now - start)/duration_millis;
    for (int i=0; i<transition_spot; i++) {
      effect2(i, now);
    }
    for (int i=transition_spot; i<NUM_LEDS; i++) {
      effect1(i, now);
    }
    FastLED.show();
  }
}

void loop() {
    run_effect(natural, 0, NUM_LEDS, 7000);
    //effect_transition_scroll(coolball_presentation, sweep_presentation, 1000);
    //run_effect(sweep_presentation, 0, NUM_LEDS, 7000);
    //effect_transition_scroll(sweep_presentation, sweep2_presentation, 1000);
    //run_effect(sweep2_presentation, 0, NUM_LEDS, 7000);
    //effect_transition_scroll(sweep2_presentation, rainbow_presentation, 1000);
    //run_effect(rainbow_presentation, 0, NUM_LEDS, 7000);
    //effect_transition_scroll(rainbow_presentation, energy_collapse, 1000);
    //run_effect(energy_collapse, 0, NUM_LEDS, 7000);
    //effect_transition_scroll(energy_collapse, coolball_presentation, 1000);
}
